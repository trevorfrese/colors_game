<script>
    var current_values = [0, 0, 0, 0, 0 ,0, 0, 0, 0];
    var current_player = 1;
    var beep_boop_hash = {0: [1,3], 1: [0, 2, 4], 2: [1, 5],
                          3: [0, 4, 6], 4: [1, 3, 5, 7], 5: [2, 4, 8],
                          6: [3, 7], 7: [6, 4, 8], 8: [7, 5]};

    function switch_player(){
      if(current_player == 1){
        current_player = 2;
        $("#player_one").removeClass("light-blue");
        $("#player_two").addClass("yellow");
        $("#player_one_notification").text("");
        $("#player_two_notification").text("It is your turn!");
      }
      else if(current_player == 2){
        current_player = 1;
        $("#player_two").removeClass("yellow");
        $("#player_one").addClass("light-blue");
        $("#player_two_notification").text("");
        $("#player_one_notification").text("It is your turn!");
      }
    }

    function shuffle(array) {
      var currentIndex = array.length, temporaryValue, randomIndex;

      // While there remain elements to shuffle...
      while (0 !== currentIndex) {

        // Pick a remaining element...
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;

        // And swap it with the current element.
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
      }

      return array;
    }

    function reset(){
      current_player = 1;
      current_values = [0, 0, 0, 0, 0 ,0, 0, 0, 0];

      $("#player_two").removeClass("yellow");
      $("#player_one").addClass("light-blue");
      $("#player_two_notification").text("");
      $("#player_one_notification").text("It is your turn!");

      for(var i = 0; i < 9; i++){
        block_element = $("#" + (i + 1));
        block_element.removeClass("darken-1 darken-2 darken-3 darken-4 light-blue yellow");
        $("#" + (i + 1) + " h2").text('');
      }

      Materialize.toast('Game reset.', 4000);


    }

    function change_color_of_square(block){
      current_classes = block.attr("class").split(' ');
      if(current_player == 1){
        block.addClass("light-blue");
        if($.inArray("yellow", current_classes) > -1){
          block.removeClass("yellow");
        }
      }
      else if(current_player == 2){
        block.addClass("yellow");
        if($.inArray("light-blue", current_classes) > -1){
          block.removeClass("light-blue");
        }
      }
    }

    function block_is_already_same_color(block_number){
      if(current_values[block_number] > 1){
        number_of_spots_to_place = current_values[block_number];
        shuffle(beep_boop_hash[block_number]);

        for(var i = 0; i < number_of_spots_to_place; i++){
          block_element = $('#' + (beep_boop_hash[block_number][i] + 1));
          console.log("going to change it for" + beep_boop_hash[block_number][i]);
          change_number_of_block_for_beep_boop(beep_boop_hash[block_number][i], block_element);
        }
        switch_player();
        return;
      }
      else{
        Materialize.toast('You already played at that location.', 4000);
        return true;
      }

    }

    function increase_color(block_number, block){
      if(current_values[block_number] == 2){
        block.addClass("darken-1");
        block.removeClass("darken-2 darken-3 darken-4");
      }
      else if(current_values[block_number] == 3){
        block.addClass("darken-2");
        block.removeClass("darken-1 darken-3 darken-4");
      }
      else if(current_values[block_number] == 4){
        block.addClass("darken-3");
        block.removeClass("darken-1 darken-2 darken-4");
      }
      else if(current_values[block_number] >= 5){
        block.addClass("darken-4");
        block.removeClass("darken-2 darken-3 darken-1");
      }
    }

    function change_number_of_block_for_beep_boop(block_number, element){
      current_classes = element.attr("class").split(' ');
      if($.inArray("yellow", current_classes) > -1 && current_player == 1){
        current_values[block_number] = 0;
        element.removeClass("darken-2 darken-3 darken-4 darken-1");
      }
      else if($.inArray("light-blue", current_classes) > -1 && current_player == 2){
        current_values[block_number] = 0;
        element.removeClass("darken-2 darken-3 darken-4 darken-1");
      }

      current_values[block_number] += 1;
      $("#" + (block_number + 1) + " h2").text(current_values[block_number]);
      console.log(current_values);
      change_color_of_square(element);
      increase_color(block_number, element);
    }

    function change_number_of_block(block_number, block, element){

      current_classes = element.attr("class").split(' ');
      if($.inArray("yellow", current_classes) > -1 && current_player == 1){
        current_values[block_number] = 0;
        element.removeClass("darken-2 darken-3 darken-4 darken-1");
      }
      else if($.inArray("light-blue", current_classes) > -1 && current_player == 2){
        current_values[block_number] = 0;
        element.removeClass("darken-2 darken-3 darken-4 darken-1");
      }

      current_values[block_number] += 1;
      $("#" + block + " h2").text(current_values[block_number]);
      increase_color(block_number, block);


      // Increment for all other blocks
      for(var i = 0; i < 9; i++){
        if(current_values[i] > 0 && i != block_number){
          current_values[i] += 1;
          block_value = (i + 1).toString();
          $("#" + block_value + " h2").text(current_values[i]);
          increase_color(i, $("#" + block_value));
        }
      }
    }

    $(document).ready(function() {
      blocks = ['1','2', '3', "4", "5", "6", "7", "8", "9"];
      $.each(blocks, function(index, block){
        $("#" + block).click(function() {
          var block_number = parseInt(block) - 1;
          var block_element = $("#" + block);
          current_classes = block_element.attr("class").split(' ');

          if($.inArray("light-blue", current_classes) > -1 && current_player == 1 ||
              $.inArray("yellow", current_classes) > -1 && current_player == 2){
            block_is_already_same_color(block_number);
            return;
          }

          // Change number of block
          change_number_of_block(block_number, block, block_element);

          // Change color of block
          change_color_of_square(block_element);


          switch_player();
          return;
        });
      });

    });


</script>
<div class="container">
  <div class="section">
    <h4 class="center">Bloop</h4>
    <div class="row" style="margin-bottom: 0px;">
      <div id="1" class="col offset-l4 offset-s3 waves-effect waves-light btn card game_button ">
        <h2 class="center"></h2>
      </div>
      <div id="2" class="col  waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
      <div id="3" class="col waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>

      <div class="col offset-l1">
        <div class="waves-effect waves-light btn orange" onclick="reset()"><i class="material-icons right">refresh</i>Reset</div>
      </div>
    </div>

    <div class="row" style="margin-bottom: 0px;">
      <div id="4" class="col offset-l4 offset-s3 waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
      <div id="5" class="col waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
      <div id="6" class="col waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
    </div>

    <div class="row" style="margin-bottom: 0px;">
      <div id="7" class="col offset-l4 offset-s3 waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
      <div id="8" class="col waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
      <div id="9" class="col waves-effect waves-light btn card game_button">
        <h2 class="center"></h2>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col l12 s12">
      <!--<div class="waves-effect waves-light btn" onclick="reset()"><i class="material-icons right">refresh</i>Reset</div>-->

    </div>
  </div>

  <div class="row">
    <div class="col l6 s6">
      <div class="card light-blue accent-3" id="player_one">
        <div class="card-content">
          <span class="card-title">
            Player 1
          </span>
          <br>
          <p id="player_one_notification">
            It is your turn!
          </p>
        </div>
      </div>
    </div>
    <div class="col l6 s6">
      <div class="card accent-2" id="player_two">
        <div class="card-content">
          <span class="card-title">
            Player 2
          </span>
          <br>
          <p id="player_two_notification">
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
